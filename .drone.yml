kind: pipeline
type: docker
name: build-image

steps:
  - name: build-docker-image
    image: plugins/docker
    when:
      branch:
        - master
      event:
        exclude:
          - promote
      ref:
        exclude:
          - refs/tags/**
    settings:
      dockerfile: build/Dockerfile
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: rfjbraunstingl/datasti-build-image
      tags:
        - latest
        - ${DRONE_COMMIT}

---
kind: pipeline
type: docker
name: build-backend

steps:
  - name: test
    image: rfjbraunstingl/datasti-build-image:latest
    when:
      branch:
        exclude:
          - master
      event:
        exclude:
          - promote
    environment:
      DATABASE_URL: mongodb://mongodb:27017
      DATASTI_BASE_URL: http://localhost:9999
    commands:
      - cd backend
      - ./mvnw verify

  # commits on master are automatically deployed to staging
  - name: build (staging)
    image: rfjbraunstingl/datasti-build-image:latest
    when:
      branch:
        - master
      ref:
        exclude:
          - refs/tags/**
    environment:
      DATASTI_BASE_URL: https://staging.datasti.app
      QUARKUS_KUBERNETES_REPLICAS: 1
      CONTAINER_REGISTRY:
        from_secret: container-image-registry
      CONTAINER_GROUP:
        from_secret: container-image-group
      CONTAINER_NAME:
        from_secret: container-image-name
      CONTAINER_USERNAME:
        from_secret: container-image-registry-user
      CONTAINER_PASSWORD:
        from_secret: container-image-registry-pass
    commands:
      - cd backend
      - ./mvnw clean package -DskipTests=true -Dquarkus.container-image.push=true

  - name: deploy (staging)
    image: bitnami/kubectl:latest
    when:
      branch:
        - master
      ref:
        exclude:
          - refs/tags/**
    environment:
      RFJ_K8S_SERVER:
        from_secret: k8s-server
      RFJ_K8S_TOKEN:
        from_secret: k8s-token
    commands:
      - kubectl apply -f backend/target/kubernetes/kubernetes.yml --namespace staging --server $RFJ_K8S_SERVER --insecure-skip-tls-verify --token $RFJ_K8S_TOKEN

  # tags on master are automatically deployed to production
  - name: build (production)
    image: rfjbraunstingl/datasti-build-image:latest
    when:
      branch:
        - master
      ref:
        - refs/tags/**
    environment:
      DATASTI_BASE_URL: https://datasti.app
      QUARKUS_KUBERNETES_REPLICAS: 2
      CONTAINER_REGISTRY:
        from_secret: container-image-registry
      CONTAINER_GROUP:
        from_secret: container-image-group
      CONTAINER_NAME:
        from_secret: container-image-name
      CONTAINER_USERNAME:
        from_secret: container-image-registry-user
      CONTAINER_PASSWORD:
        from_secret: container-image-registry-pass
    commands:
      - cd backend
      - ./mvnw clean package -DskipTests=true -Dquarkus.container-image.push=true

  - name: deploy (production)
    image: bitnami/kubectl:latest
    when:
      branch:
        - master
      ref:
        - refs/tags/**
    environment:
      RFJ_K8S_SERVER:
        from_secret: k8s-server
      RFJ_K8S_TOKEN:
        from_secret: k8s-token
    commands:
      - kubectl apply -f backend/target/kubernetes/kubernetes.yml --namespace production --server $RFJ_K8S_SERVER --insecure-skip-tls-verify --token $RFJ_K8S_TOKEN

services:
  - name: mongodb
    image: mongo
